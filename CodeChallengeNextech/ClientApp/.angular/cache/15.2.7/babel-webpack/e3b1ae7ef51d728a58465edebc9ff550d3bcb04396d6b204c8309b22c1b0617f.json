{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction FetchDataComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class FetchDataComponent {\n  constructor(http, baseUrl) {\n    this.item = [];\n    //http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\n    //  this.forecasts = result;\n    //}, error => console.error(error));\n    http.get(baseUrl + 'hackernews').subscribe(result => {\n      console.log(result);\n      this.item = result;\n    }, error => console.error(error));\n  }\n}\nFetchDataComponent.ɵfac = function FetchDataComponent_Factory(t) {\n  return new (t || FetchDataComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nFetchDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: FetchDataComponent,\n  selectors: [[\"app-fetch-data\"]],\n  decls: 18,\n  vars: 3,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"]],\n  template: function FetchDataComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Weather forecast\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"This component demonstrates fetching data from the server.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, FetchDataComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵelementStart(5, \"table\", 2)(6, \"thead\")(7, \"tr\")(8, \"th\");\n      i0.ɵɵtext(9, \"Title\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \"Link\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"tbody\")(13, \"tr\")(14, \"td\");\n      i0.ɵɵtext(15);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"td\");\n      i0.ɵɵtext(17);\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.item);\n      i0.ɵɵadvance(11);\n      i0.ɵɵtextInterpolate(ctx.item.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate(ctx.item.url);\n    }\n  },\n  dependencies: [i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAAiB;IAAIA,0BAAU;IAAAA,iBAAK;;;ACGpC,OAAM,MAAOC,kBAAkB;EAG7BC,YAAYC,IAAgB,EAAsBC,OAAe;IAF1D,SAAI,GAAW,EAAE;IAGtB;IACA;IACA;IACAD,IAAI,CAACE,GAAG,CAASD,OAAO,GAAG,YAAY,CAAC,CAACE,SAAS,CAACC,MAAM,IAAG;MAC1DC,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;MACnB,IAAI,CAACG,IAAI,GAAGH,MAAM;IACpB,CAAC,EAAEI,KAAK,IAAIH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;EACnC;;AAXWV,kBAAkB;mBAAlBA,kBAAkB,4DAGS,UAAU;AAAA;AAHrCA,kBAAkB;QAAlBA,kBAAkB;EAAAW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDP/BhB,6BAAoB;MAAAA,gCAAgB;MAAAA,iBAAK;MAEzCA,yBAAG;MAAAA,0EAA0D;MAAAA,iBAAI;MAEjEA,+DAAwC;MAExCA,gCAAgE;MAGtDA,qBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,qBAAI;MAAAA,iBAAK;MASjBA,8BAAO;MAECA,aAAgB;MAAAA,iBAAK;MACzBA,2BAAI;MAAAA,aAAc;MAAAA,iBAAK;;;MAlBzBA,eAAW;MAAXA,gCAAW;MAiBLA,gBAAgB;MAAhBA,oCAAgB;MAChBA,eAAc;MAAdA,kCAAc","names":["i0","FetchDataComponent","constructor","http","baseUrl","get","subscribe","result","console","log","item","error","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\hparedes\\source\\repos\\CodeChallengeNextech\\CodeChallengeNextech\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.html","C:\\Users\\hparedes\\source\\repos\\CodeChallengeNextech\\CodeChallengeNextech\\ClientApp\\src\\app\\fetch-data\\fetch-data.component.ts"],"sourcesContent":["<h1 id=\"tableLabel\">Weather forecast</h1>\r\n\r\n<p>This component demonstrates fetching data from the server.</p>\r\n\r\n<p *ngIf=\"!item\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\">\r\n  <thead>\r\n    <tr>\r\n      <th>Title</th>\r\n      <th>Link</th>\r\n    </tr>\r\n  </thead>\r\n  <!-- <tbody>\r\n    <tr *ngFor=\"let item of news\">\r\n      <td>{{ item.title }}</td>\r\n      <td>{{ item.url }}</td>\r\n    </tr>\r\n  </tbody> -->\r\n  <tbody>\r\n    <tr>\r\n      <td>{{ item.title }}</td>\r\n      <td>{{ item.url }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-fetch-data',\r\n  templateUrl: './fetch-data.component.html'\r\n})\r\nexport class FetchDataComponent {\r\n  public item: Item[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    //http.get<WeatherForecast[]>(baseUrl + 'weatherforecast').subscribe(result => {\r\n    //  this.forecasts = result;\r\n    //}, error => console.error(error));\r\n    http.get<Item[]>(baseUrl + 'hackernews').subscribe(result => {\r\n      console.log(result);\r\n      this.item = result;\r\n    }, error => console.error(error));\r\n  }\r\n}\r\n\r\ninterface Item {\r\n  title: string;\r\n  url: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}